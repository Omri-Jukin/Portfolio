{
  "metadata": {
    "title": "Omri Jukin - Full Stack Developer",
    "description": "Full Stack Developer specializing in React, Node.js, TypeScript, Next.js, tRPC, PostgreSQL, MongoDB, and microservices architecture"
  },
  "login": {
    "title": "Admin Login",
    "subtitle": "Enter your credentials to access the admin panel",
    "username": "Username",
    "password": "Password",
    "signIn": "Sign In",
    "signingIn": "Signing in...",
    "invalidCredentials": "Invalid credentials",
    "loginFailed": "Login failed. Please try again."
  },
  "Admin": {
    "dashboard": "Dashboard",
    "blog": "Blog",
    "workExperience": "Work Experience",
    "projects": "Projects",
    "skills": "Skills",
    "certifications": "Certifications",
    "new": "New",
    "edit": "Edit",
    "workExperienceManagement": "Work Experience Management",
    "projectsManagement": "Projects Management",
    "skillsManagement": "Skills Management",
    "certificationsManagement": "Certifications Management",
    "blogManagement": "Blog Management",
    "addExperience": "Add Experience",
    "editWorkExperience": "Edit Work Experience",
    "addNewWorkExperience": "Add New Work Experience",
    "role": "Role",
    "company": "Company",
    "location": "Location",
    "industry": "Industry",
    "startDate": "Start Date",
    "endDate": "End Date",
    "description": "Description",
    "achievements": "Achievements",
    "technologies": "Technologies",
    "responsibilities": "Responsibilities",
    "employmentType": "Employment Type",
    "companyUrl": "Company URL",
    "visible": "Visible",
    "featured": "Featured",
    "add": "Add",
    "cancel": "Cancel",
    "updateExperience": "Update Experience",
    "createExperience": "Create Experience",
    "saving": "Saving...",
    "leaveEmptyForCurrent": "Leave empty for current position",
    "totalVisible": "Total Visible",
    "totalFeatured": "Featured",
    "totalExperience": "Total Experience",
    "total": "Total",
    "past": "Past",
    "current": "Current",
    "companyWebsite": "Company Website",
    "details": "Details",
    "achievementsRecorded": "achievements recorded",
    "more": "more",
    "hide": "Hide",
    "show": "Show",
    "unfeature": "Unfeature",
    "feature": "Feature",
    "delete": "Delete",
    "deleting": "Deleting...",
    "deleteWorkExperience": "Delete Work Experience",
    "deleteConfirmation": "Are you sure you want to delete this work experience? This action cannot be undone.",
    "fullTime": "Full Time",
    "partTime": "Part Time",
    "contract": "Contract",
    "freelance": "Freelance",
    "internship": "Internship",
    "ongoing": "Ongoing",
    "present": "Present"
  },
  "register": {
    "title": "Create Account",
    "subtitle": "Register for an account. Your registration will be reviewed by an admin.",
    "name": "Full Name",
    "email": "Email",
    "password": "Password",
    "confirmPassword": "Confirm Password",
    "createAccount": "Create Account",
    "creatingAccount": "Creating Account...",
    "registrationSuccess": "Registration successful! Please wait for admin approval.",
    "registrationFailed": "Registration failed. Please try again.",
    "passwordsDontMatch": "Passwords do not match",
    "passwordTooShort": "Password must be at least 6 characters",
    "alreadyHaveAccount": "Already have an account?",
    "signInHere": "Sign in here"
  },
  "common": {
    "language": "Language",
    "home": "Home",
    "about": "About",
    "contact": "Contact",
    "blog": "Blog",
    "career": "Career",
    "certifications": "Certifications",
    "resume": "Resume",
    "projects": "Projects",
    "skills": "Skills",
    "description": "I'm a FullStack Engineer specializing in full-stack web development, scalable systems architecture, and modern technologies including React, Node.js, TypeScript, Next.js, tRPC, PostgreSQL, MongoDB, and microservices."
  },
  "hero": {
    "titleRow1": "I Don't Sell Software.",
    "titleRow2": "I Engineer the Evolution of the Future",
    "subtitle": "I'm not just a developer—I'm a visionary. I don't just build software; I engineer evolution. My work isn't about creating products; it's about shaping the future.",
    "profileAlt": "Omri Jukin",
    "exploreButton": "Explore work",
    "resumeButton": "Resume",
    "careerButton": "Career",
    "cta": "Let's engineer the future together"
  },
  "examples": {
    "title": "Interactive Examples",
    "subtitle": "Explore my full-stack development capabilities through interactive examples, showcasing React, TypeScript, Three.js, animations, and modern web technologies.",
    "cta": "Want to see more interactive examples?",
    "viewMoreButton": "View Full Examples"
  },
  "scrollGaps": {
    "heroAbout": {
      "text": "Discover the journey ahead ...",
      "cta": "Continue scrolling to find out more"
    },
    "aboutQA": {
      "text": "Building bridges between ideas and execution"
    },
    "qaServices": {
      "text": "Spinning through the tech stack"
    },
    "servicesProjects": {
      "text": "Where vision meets reality"
    },
    "servicesCareer": {
      "text": "Exploring professional growth and experience"
    },
    "careerProjects": {
      "text": "From experience to innovation"
    },
    "projectsContact": {
      "text": "Ready to create something amazing together?"
    }
  },
  "about": {
    "title": "Who I Am",
    "subtitle": "EXPLORE MY CREATIVE TOOLKIT",
    "description": "I'm a passionate FullStack Engineer and designer who believes that great digital experiences come from the perfect blend of technical expertise and creative vision. With years of experience crafting full-stack web applications, I've learned that the best solutions are those that not only work flawlessly but also delight users at every interaction.",
    "mySkills": "My Skills",
    "skillDetailsTitle": "Skill Details",
    "experience": "Experience:",
    "years": "Years:",
    "technologies": "Technologies:",
    "examples": "Examples:",
    "readyToWork": "Ready to Work Together?",
    "letsDiscuss": "Let's discuss how my skills and experience can help bring your project to life.",
    "cta": "View My Resume",
    "ctaButton": "Get In Touch",
    "skillsTitle": "My Technical Skills",
    "skills": {
      "codeConjurer": "CODE CONJURER",
      "brandArchitect": "BRAND ARCHITECT",
      "designDreamer": "DESIGN DREAMER"
    },
    "skillDetails": {
      "codeConjurer": {
        "title": "CODE CONJURER",
        "description": "I transform complex requirements into elegant, scalable solutions. My expertise spans the entire development stack, from responsive frontend interfaces to robust backend systems and efficient database architectures.",
        "experience": "Advanced",
        "technologies": [
          "React",
          "Node.js",
          "TypeScript",
          "Next.js",
          "tRPC",
          "PostgreSQL",
          "MongoDB"
        ],
        "examples": [
          "Microservices platforms",
          "CRM systems",
          "E-commerce solutions"
        ],
        "years": "5+ years"
      },
      "brandArchitect": {
        "title": "BRAND ARCHITECT",
        "description": "I design and implement comprehensive brand experiences that resonate with users. My approach combines technical excellence with creative design thinking to create memorable digital interactions.",
        "experience": "Advanced",
        "technologies": [
          "Material-UI",
          "Tailwind CSS",
          "Framer Motion",
          "Design Systems"
        ],
        "examples": [
          "Portfolio websites",
          "Brand identity systems",
          "Interactive experiences"
        ],
        "years": "3+ years"
      },
      "designDreamer": {
        "title": "DESIGN DREAMER",
        "description": "I create intuitive user experiences that bridge the gap between functionality and aesthetics. My designs prioritize usability while maintaining visual appeal and brand consistency.",
        "experience": "Advanced",
        "technologies": [
          "UX/UI Design",
          "Prototyping",
          "User Research",
          "Accessibility"
        ],
        "examples": [
          "User interface designs",
          "Interactive prototypes",
          "Accessibility improvements"
        ],
        "years": "4+ years"
      },
      "problemSolver": {
        "title": "PROBLEM SOLVER",
        "description": "I identify and solve complex issues with a systematic approach. My expertise lies in analyzing problems, developing effective solutions, and implementing them with precision.",
        "experience": "Advanced",
        "technologies": ["Problem Solving", "System Design", "Debugging"],
        "examples": [
          "Performance optimization",
          "Error handling",
          "System architecture"
        ],
        "years": "5+ years"
      },
      "teamPlayer": {
        "title": "TEAM PLAYER",
        "description": "I collaborate effectively with cross-functional teams to deliver high-quality results. My expertise lies in communication, conflict resolution, and fostering a positive work environment.",
        "experience": "Advanced",
        "technologies": [
          "Team Collaboration",
          "Conflict Resolution",
          "Communication"
        ],
        "examples": [
          "Project management",
          "Team building",
          "Cross-functional collaboration"
        ],
        "years": "5+ years"
      },
      "innovationArchitect": {
        "title": "INNOVATION ARCHITECT",
        "description": "I design and implement innovative solutions that push the boundaries of technology. My expertise lies in identifying opportunities, developing creative ideas, and implementing them with precision.",
        "experience": "Advanced",
        "technologies": [
          "Innovation",
          "Creative Design",
          "Product Development"
        ],
        "examples": [
          "New product development",
          "Creative solutions",
          "Innovative design"
        ],
        "years": "5+ years"
      },
      "digitalStoryteller": {
        "title": "DIGITAL STORYTELLER",
        "description": "I create engaging digital experiences that tell stories and connect with users. My expertise lies in storytelling, user experience, and visual design.",
        "experience": "Advanced",
        "technologies": ["User Experience", "Visual Design", "Storytelling"],
        "examples": [
          "Interactive experiences",
          "User interface designs",
          "Visual storytelling"
        ],
        "years": "5+ years"
      }
    }
  },
  "qa": {
    "title": "Rapid Q&A",
    "subtitle": "Get to know me quickly",
    "questions": [
      {
        "question": "What drives you?",
        "answer": "Solving complex problems and creating elegant solutions that make a real impact."
      },
      {
        "question": "My work style?",
        "answer": "Methodical yet creative, with a focus on user experience and clean code."
      },
      {
        "question": "Biggest achievement?",
        "answer": "Leading the development of enterprise-level systems that serve thousands of users."
      },
      {
        "question": "What excites me?",
        "answer": "Learning new technologies and pushing the boundaries of what's possible."
      },
      {
        "question": "My philosophy?",
        "answer": "Great software should be invisible—users should focus on their goals, not the interface."
      },
      {
        "question": "Future goals?",
        "answer": "Building innovative products that solve real-world problems at scale."
      }
    ]
  },
  "services": {
    "title": "Innovative Solutions",
    "subtitle": "What I bring to the table",
    "services": [
      {
        "title": "Craft your future",
        "description": "I build scalable, modern applications that grow with your business needs.",
        "buttonText": "See Work",
        "buttonVariant": "primary"
      },
      {
        "title": "Skills that shine",
        "description": "I offer full-stack expertise from frontend finesse to backend brilliance.",
        "buttonText": "Discover",
        "buttonVariant": "secondary"
      },
      {
        "title": "Feedback fuels growth",
        "description": "I provide continuous improvement through user feedback and iterative development.",
        "buttonText": "Get in Touch",
        "buttonVariant": "primary"
      }
    ]
  },
  "projects": {
    "title": "Featured Projects",
    "subtitle": "A glimpse into my work",
    "projects": [
      {
        "title": "Snow HQ",
        "description": "Enterprise CRM with real-time analytics and automated workflows - Next.js, tRPC, Drizzle ORM, PostgreSQL",
        "link": "https://github.com/Omri-Jukin/Snow"
      },
      {
        "title": "Portfolio Website",
        "description": "Modern responsive portfolio with i18n, dark mode, animations - Next.js, TypeScript, Material-UI, Framer Motion",
        "link": "https://omrijukin.com"
      },
      {
        "title": "ClipWhisperer",
        "description": "Microservices platform for automated video processing with AI narration - TypeScript, Node.js, microservices",
        "link": "https://github.com/ClipWhisperer"
      },
      {
        "title": "Microservices Manager",
        "description": "CLI tool for microservices ecosystem management with automated workflows - TypeScript, Node.js, CLI architecture",
        "link": "https://github.com/ClipWhisperer/Utils"
      }
    ]
  },
  "portfolio": {
    "title": "Technical Portfolio",
    "subtitle": "Detailed project showcase with technical implementations, problem-solving approaches, and code examples",
    "viewCode": "View Code",
    "liveDemo": "Live Demo",
    "technicalDetails": "Technical Details & Implementation",
    "problemSolution": "Problem & Solution",
    "architecture": "Architecture & Design",
    "codeExamples": "Code Examples",
    "technicalChallenges": "Technical Challenges & Solutions",
    "challenge": "Challenge:",
    "approach": "Approach:",
    "keyFeatures": "Key Features:",
    "solution": "Solution:"
  },
  "contact": {
    "title": "Let's Connect",
    "subtitle": "Ready to bring a new idea to life?",
    "description": "I'm always excited to discuss new opportunities, collaborations, or just chat about technology.\nDrop me a message and let's create something amazing together...",
    "button": "Start a conversation",
    "form": {
      "title": "Get in Touch",
      "description": "Have a project in mind ? Let's discuss how we can bring your ideas to life. Fill out the contact form and I'll get back to you as soon as possible.",
      "name": "My Name",
      "email": "My Email",
      "phone": "My Phone",
      "subject": "Subject",
      "message": "My Message",
      "submit": "Send Message",
      "sending": "Sending...",
      "success": "Message sent successfully!",
      "error": "Something went wrong. Please try again."
    },
    "info": {
      "title": "Contact Information",
      "email": "Email",
      "emailValue": "omrijukin@gmail.com",
      "phone": "Phone",
      "phoneValue": "+972 52-334-4064",
      "timezone": "Timezone",
      "timezoneValue": "GMT+2 (Israel)",
      "location": "Location",
      "locationValue": "Israel"
    },
    "social": {
      "title": "Connect on Social",
      "email": {
        "title": "Email",
        "username": "omrijukin@gmail.com",
        "button": "Let's connect!"
      },
      "phone": {
        "title": "Phone",
        "username": "+972 52-334-4064",
        "button": "Call me!"
      },
      "github": {
        "title": "GitHub",
        "username": "@Omri-Jukin",
        "button": "Connect"
      },
      "linkedin": {
        "title": "LinkedIn",
        "username": "@omri-jukin",
        "button": "Connect"
      },
      "whatsapp": {
        "title": "WhatsApp",
        "username": "Omri Jukin",
        "button": "Connect"
      },
      "telegram": {
        "title": "Telegram",
        "username": "Omri Jukin",
        "button": "Connect"
      }
    },
    "additional": {
      "title": "Additional Information",
      "website": "Website: Personal Website",
      "timezone": "Timezone: Asia/Jerusalem",
      "citizenship": "Citizenship: Israeli"
    }
  },
  "career": {
    "title": "Career",
    "subtitle": "My professional journey and experience",
    "description": "My professional journey",
    "experience": "I have hands-on experience in full-stack development, team management, and process improvement at leading technology and insurance companies.",
    "keyAchievements": "Key Achievements & Responsibilities",
    "interestedInLearning": "Interested in Exploring More ?",
    "checkOutResume": "Check out my detailed resume or get in touch to discuss opportunities and collaborations.",
    "viewResume": "View Resume",
    "experiences": [
      {
        "role": "Full Stack Engineer",
        "time": "2024–2025",
        "company": "Abra Technologies, Israel",
        "details": [
          "Built platform aggregating market data from government sources using Next.js, tRPC, and PostgreSQL, improving processing efficiency by 40%",
          "Designed modular UI component library with Storybook and TypeScript, reducing development time by 30% with 95% test coverage",
          "Optimized data processing algorithms and database queries, improving system performance by 45% and reducing API response times to 300ms"
        ]
      },
      {
        "role": "Business Constitution Development Specialist",
        "time": "2023–2024",
        "company": "Menora Mivtachim Insurance Company, Israel",
        "details": [
          "Architected business constitution system managing 50,000+ policy rules, improving query performance by 60% and system reliability by 90%",
          "Mentored 8+ developers reducing onboarding from 6 to 3 weeks, improving team productivity by 40% through structured training programs",
          "Led development of 12+ insurance products using modern practices, achieving 30% higher customer acquisition and 25% faster time-to-market"
        ]
      },
      {
        "role": "Senior Customer Service Representative",
        "time": "2021–2023",
        "company": "Menora Mivtachim Insurance Company, Israel",
        "details": [
          "Achieved 95% customer satisfaction while handling complex inquiries, reducing average handling time by 25% and improving team efficiency by 35%",
          "Developed workflow protocols using data analysis and customer feedback, resulting in process improvements and enhanced service quality",
          "Trained 10+ team members reducing training time by 35% and improving service quality through structured onboarding and continuous feedback"
        ]
      }
    ]
  },
  "resume": {
    "title": "Resume",
    "description": "My professional experience and skills",
    "networkingSummary": "Download my resume to learn more about my background",
    "experience": "Full Stack Developer",
    "professionalSummary": "Full Stack Developer with 5+ years expertise in scalable web development and modern technologies. Proven track record with React, Node.js, TypeScript, Next.js, tRPC, PostgreSQL, MongoDB, and microservices. Strong background in insurance domain from service to core systems development.",
    "viewCode": "View Code",
    "letsBuildTogether": "Let's Build Something Amazing Together",
    "readyToDiscuss": "Ready to discuss my next project or opportunity?",
    "getInTouch": "Get In Touch",
    "templateSelector": {
      "title": "Choose My Resume Style",
      "subtitle": "Select from my collection of professionally designed templates",
      "templateNames": {
        "modern": "Modern",
        "elegant": "Elegant",
        "tech": "Tech",
        "creative": "Creative",
        "minimal": "Minimal",
        "teal": "Teal",
        "indigo": "Indigo",
        "rose": "Rose",
        "corporate": "Corporate",
        "startup": "Startup",
        "academic": "Academic"
      }
    },
    "languageSelector": {
      "title": "Choose Resume Language",
      "description": "Select my preferred language for the PDF resume. The content will be automatically translated based on my selection.",
      "selectedLanguage": "Resume will be generated in",
      "generating": "Generating PDF...",
      "download": "Download Resume",
      "downloadDescription": "PDF will include all my professional experience, skills, and projects in",
      "documentGeneration": {
        "title": "Document Generation Options",
        "selectTypes": "Select Document Types",
        "condensedResume": "Condensed Resume",
        "technicalPortfolio": "Technical Portfolio",

        "portfolioCustomization": "Portfolio Customization",
        "includeCodeExamples": "Include Code Examples",
        "includeTechnicalChallenges": "Include Technical Challenges",
        "includeArchitectureDetails": "Include Architecture Details",
        "customTitle": "Custom Title (Optional)",
        "customDescription": "Custom Description (Optional)",
        "generateDocuments": "Generate Documents",
        "generatingDocuments": "Generating Documents...",
        "willCreateSeparate": "Will create separate PDF files for each document type"
      }
    }
  },
  "skills": {
    "title": "Technical Expertise",
    "categories": {
      "technical": {
        "title": "Technical Skills",
        "skills": [
          {
            "name": "Full-Stack Development",
            "level": 95,
            "technologies": [
              "React",
              "Next.js",
              "TypeScript",
              "JavaScript",
              "Node.js",
              "HTML5",
              "CSS3",
              "Material-UI",
              "Tailwind CSS",
              "Framer Motion"
            ]
          },
          {
            "name": "Backend Development",
            "level": 95,
            "technologies": [
              "Node.js",
              "Express.js",
              "tRPC",
              "Drizzle ORM",
              "PostgreSQL",
              "MongoDB",
              "REST APIs",
              "GraphQL",
              "API Development"
            ]
          },
          {
            "name": "System Architecture",
            "level": 90,
            "technologies": [
              "Microservices",
              "Monolithic Systems",
              "API Design",
              "System Integration",
              "Performance Optimization",
              "Scalability"
            ]
          },
          {
            "name": "Database Management",
            "level": 90,
            "technologies": [
              "PostgreSQL",
              "MongoDB",
              "Data Modeling",
              "Query Optimization",
              "Database Design",
              "Data Architecture"
            ]
          },
          {
            "name": "Cloud Technologies",
            "level": 85,
            "technologies": [
              "AWS",
              "Vercel",
              "Docker",
              "CI/CD",
              "Deployment",
              "Cloud Infrastructure"
            ]
          },
          {
            "name": "DevOps & CI/CD",
            "level": 80,
            "technologies": [
              "Git",
              "Docker",
              "Jest",
              "Vitest",
              "Storybook",
              "Testing",
              "Continuous Integration"
            ]
          }
        ]
      },
      "soft": {
        "title": "Soft Skills",
        "skills": [
          {
            "name": "Leadership",
            "level": 90,
            "description": "Team management, mentoring, and project coordination"
          },
          {
            "name": "Problem Solving",
            "level": 95,
            "description": "Analytical thinking and creative solutions"
          },
          {
            "name": "Communication",
            "level": 85,
            "description": "Technical and non-technical stakeholder communication"
          },
          {
            "name": "Adaptability",
            "level": 90,
            "description": "Quick learning and technology adoption"
          }
        ]
      }
    }
  },
  "languages": {
    "title": "Languages",
    "subtitle": "My programming and spoken languages",
    "programming": [
      { "name": "TypeScript", "level": "Advanced" },
      { "name": "JavaScript", "level": "Advanced" },
      { "name": "SQL", "level": "Advanced" },
      { "name": "HTML/CSS", "level": "Advanced" },
      { "name": "Java", "level": "Intermediate" },
      { "name": "C#", "level": "Intermediate" },
      { "name": "Python", "level": "Novice" }
    ],
    "spoken": [
      { "name": "Hebrew", "level": "Native" },
      { "name": "English", "level": "Professional" },
      { "name": "Spanish", "level": "Novice" }
    ]
  },
  "additionalActivities": "Founder of an online community promoting critical and rational thinking and open debates. Engaged in public speaking and live broadcasts on topics related to hard sciences, soft sciences, rational thinking, and technology. Enthusiastic hobbyist magician, using creative skills to engage audiences and encourage curiosity.",
  "certifications": {
    "title": "Certifications & Achievements",
    "subtitle": "Professional credentials and technical certifications that validate my expertise",
    "verify": "Verify Certificate",
    "credentialId": "Credential ID",
    "categories": {
      "technical": "Technical",
      "cloud": "Cloud",
      "security": "Security",
      "project-management": "Project Management",
      "design": "Design",
      "other": "Other"
    },
    "list": [
      {
        "id": "practical-electrical-engineering",
        "name": "Practical Electrical Engineering Diploma",
        "issuer": "Air Force Technological College",
        "issueDate": "2017-06-01",
        "description": "Comprehensive electrical engineering program covering electrical fundamentals, system design, and programming fundamentals.",
        "skills": ["Electrical Engineering", "System Design", "Programming"],
        "category": "technical",
        "icon": "🎓"
      },
      {
        "id": "full-stack-development",
        "name": "Full Stack Development Specialization",
        "issuer": "Self-Directed Learning & Professional Experience",
        "issueDate": "2020-01-01",
        "description": "Advanced expertise in full-stack development through hands-on experience building scalable applications with modern technologies and frameworks.",
        "skills": [
          "React",
          "Next.js",
          "Node.js",
          "TypeScript",
          "PostgreSQL",
          "MongoDB"
        ],
        "category": "technical",
        "icon": "💻"
      },
      {
        "id": "microservices-architecture",
        "name": "Microservices Architecture",
        "issuer": "Professional Experience",
        "issueDate": "2023-01-01",
        "description": "Extensive experience designing and implementing microservices architectures for enterprise-level applications, including service orchestration and inter-service communication.",
        "skills": [
          "Microservices",
          "API Design",
          "System Architecture",
          "Service Orchestration"
        ],
        "category": "technical",
        "icon": "🏗️"
      }
    ]
  },
  "footer": {
    "title": "About",
    "children": "I'm a FullStack Engineer building scalable systems and modern web experiences with clean architecture and practical solutions.",
    "linksTitle": "Quick Links",
    "links": [
      { "label": "Home", "href": "/" },
      { "label": "Career", "href": "/career" },
      { "label": "Certifications", "href": "/certifications" },
      { "label": "Technical Portfolio", "href": "/technical-portfolio" },
      { "label": "Resume", "href": "/resume" },
      { "label": "Blog", "href": "/blog" },
      { "label": "Contact", "href": "/contact" },
      { "label": "Examples", "href": "/examples" }
    ],
    "socialTitle": "Social",
    "social": [
      {
        "label": "GitHub",
        "href": "https://github.com/Omri-Jukin",
        "icon": "GitHub"
      },
      {
        "label": "LinkedIn",
        "href": "https://www.linkedin.com/in/omri-jukin/",
        "icon": "LinkedIn"
      },
      {
        "label": "Telegram",
        "href": "https://t.me/Agent_OJ",
        "icon": "Telegram"
      }
    ],
    "contactTitle": "Contact",
    "contact": [
      {
        "label": "Email",
        "href": "mailto:omrijukin@gmail.com",
        "icon": "Email"
      },
      {
        "label": "Phone",
        "href": "tel:+9720523344064",
        "icon": "Phone"
      },
      {
        "label": "WhatsApp",
        "href": "https://wa.me/972523344064",
        "icon": "WhatsApp"
      }
    ],
    "copyright": "Omri Jukin. All rights reserved."
  },
  "technicalPortfolio": {
    "title": "Technical Portfolio",
    "subtitle": "Comprehensive showcase of technical expertise, architecture decisions, and code implementations",
    "description": "A comprehensive showcase of technical expertise, code implementations, and problem-solving abilities across various projects and technologies.",
    "overview": {
      "title": "Technical Portfolio Overview",
      "description": "A comprehensive showcase of technical expertise, code implementations, and problem-solving abilities across various projects and technologies.",
      "stats": {
        "projects": "5+",
        "technologies": "20+",
        "challenges": "15+",
        "languages": "4"
      }
    },
    "codeExamples": {
      "title": "Code Examples & Patterns",
      "description": "Real-world code examples demonstrating various patterns and best practices from actual projects",
      "projects": {
        "portfolio": {
          "title": "Portfolio Website",
          "description": "Modern Next.js portfolio with advanced TypeScript patterns, performance optimization, and complex state management",
          "technologies": [
            "Next.js",
            "TypeScript",
            "Material-UI",
            "tRPC",
            "Prisma"
          ],
          "examples": [
            {
              "title": "Advanced PDF Generation with Dynamic Theming",
              "description": "Complex PDF generation system with theme variants, layout optimization, and ATS compatibility",
              "language": "typescript",
              "code": "// Core PDF generation with dynamic theming\nclass PDFGenerator {\n  private doc: jsPDF;\n  private theme: PDFTheme;\n  private currentY = 0;\n  \n  constructor(config: PDFConfig) {\n    this.theme = config.theme;\n    this.doc = new jsPDF({ orientation: 'portrait', unit: 'mm', format: 'a4' });\n  }\n  \n  private applyTheme() {\n    this.doc.setFillColor(this.theme.background);\n    this.doc.rect(0, 0, this.doc.internal.pageSize.width, this.doc.internal.pageSize.height, 'F');\n    this.doc.setTextColor(this.theme.text);\n  }\n  \n  private addSection(section: SectionConfig) {\n    // Add section header with theme styling\n    this.doc.setFillColor(this.theme.primary);\n    this.doc.roundedRect(20, this.currentY, 170, 8, 2, 'F');\n    \n    this.doc.setTextColor('#FFFFFF');\n    this.doc.setFontSize(14);\n    this.doc.text(section.title, 24, this.currentY + 5.5);\n    \n    this.currentY += 12;\n    this.addSectionContent(section);\n  }\n  \n  private addSectionContent(section: SectionConfig) {\n    this.doc.setTextColor(this.theme.text);\n    this.doc.setFontSize(10);\n    \n    const lines = this.doc.splitTextToSize(section.content, 170);\n    lines.forEach((line: string) => {\n      this.doc.text(line, 24, this.currentY);\n      this.currentY += 5;\n    });\n    this.currentY += 8;\n  }\n  \n  public async generate(): Promise<Blob> {\n    this.applyTheme();\n    this.config.sections.forEach(section => this.addSection(section));\n    return this.doc.output('blob');\n  }\n}\n\n// Usage\nexport const generateResumePDF = async (data: ResumeData, theme: PDFTheme) => {\n  const generator = new PDFGenerator({ theme, sections: data.sections });\n  return await generator.generate();\n};",
              "explanation": "This demonstrates advanced OOP principles, complex state management, dynamic theming, and sophisticated PDF generation with layout optimization, page management, and theme-based styling systems."
            },
            {
              "title": "Advanced TypeScript Utility Types & Generic Constraints",
              "description": "Complex TypeScript patterns for type-safe API responses and dynamic form validation",
              "language": "typescript",
              "code": "// Core TypeScript utility types and form validation\ntype ApiResponse<T, E = string> = {\n  data: T;\n  error: E | null;\n  status: 'success' | 'error' | 'loading';\n  timestamp: number;\n};\n\ntype FormField<T> = {\n  value: T;\n  error: string | null;\n  touched: boolean;\n  validators: Validator<T>[];\n};\n\n// Generic form hook with type safety\nfunction useForm<T extends Record<string, any>>(\n  initialValues: T,\n  validationSchema: ValidationSchema<T>\n): FormState<T> {\n  const [values, setValues] = useState<T>(initialValues);\n  const [errors, setErrors] = useState<Partial<Record<keyof T, string>>>({});\n  \n  const setFieldValue = useCallback(<K extends keyof T>(\n    field: K,\n    value: T[K]\n  ) => {\n    setValues(prev => ({ ...prev, [field]: value }));\n    \n    // Validate field\n    const validators = validationSchema[field];\n    if (validators) {\n      const isValid = validators.every(v => v.validate(value).isValid);\n      setErrors(prev => ({\n        ...prev,\n        [field]: isValid ? null : 'Invalid value'\n      }));\n    }\n  }, [validationSchema]);\n  \n  const submit = useCallback(async (): Promise<ApiResponse<T>> => {\n    try {\n      const response = await submitForm(values);\n      return { data: response, error: null, status: 'success', timestamp: Date.now() };\n    } catch (error) {\n      return { data: values, error: error.message, status: 'error', timestamp: Date.now() };\n    }\n  }, [values]);\n  \n  return { values, errors, setFieldValue, submit, isValid: Object.values(errors).every(e => !e) };\n}\n\n// Usage\ntype UserForm = { name: string; email: string; age: number };\nconst userForm = useForm<UserForm>(\n  { name: '', email: '', age: 0 },\n  {\n    name: [{ validate: (v) => ({ isValid: v.length > 0, errors: [] }), message: 'Required' }],\n    email: [{ validate: (v) => ({ isValid: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(v), errors: [] }), message: 'Invalid email' }],\n    age: [{ validate: (v) => ({ isValid: v >= 18, errors: [] }), message: 'Must be 18+' }]\n  }\n);",
              "explanation": "This demonstrates advanced TypeScript generics, complex type constraints, debounced validation, async form handling, and sophisticated error management with full type safety and inference."
            }
          ]
        },
        "snowhq": {
          "title": "Snow HQ - Enterprise CRM",
          "description": "Full-stack enterprise CRM with real-time analytics, automated workflows, and advanced data management",
          "technologies": [
            "Next.js",
            "TypeScript",
            "tRPC",
            "Drizzle ORM",
            "PostgreSQL",
            "Material-UI"
          ],
          "examples": [
            {
              "title": "Real-time Data Synchronization with tRPC",
              "description": "Core functionality for real-time data updates across the CRM system",
              "language": "typescript",
              "code": "// Real-time data sync with tRPC and WebSockets\nconst useRealtimeData = <T>(endpoint: string, filters?: Record<string, any>) => {\n  const [data, setData] = useState<T[]>([]);\n  const [isConnected, setIsConnected] = useState(false);\n  \n  useEffect(() => {\n    const ws = new WebSocket(`ws://localhost:3001/${endpoint}`);\n    \n    ws.onopen = () => {\n      setIsConnected(true);\n      ws.send(JSON.stringify({ type: 'subscribe', filters }));\n    };\n    \n    ws.onmessage = (event) => {\n      const { type, payload } = JSON.parse(event.data);\n      \n      switch (type) {\n        case 'CREATE':\n          setData(prev => [...prev, payload]);\n          break;\n        case 'UPDATE':\n          setData(prev => prev.map(item => \n            item.id === payload.id ? { ...item, ...payload } : item\n          ));\n          break;\n        case 'DELETE':\n          setData(prev => prev.filter(item => item.id !== payload.id));\n          break;\n      }\n    };\n    \n    return () => ws.close();\n  }, [endpoint, filters]);\n  \n  return { data, isConnected };\n};\n\n// Usage in CRM components\nconst { data: customers, isConnected } = useRealtimeData<Customer>('customers', {\n  status: 'active',\n  region: 'north'\n});",
              "explanation": "Core real-time functionality enabling live data updates across the CRM without page refreshes."
            },
            {
              "title": "Advanced Query Builder with Drizzle ORM",
              "description": "Dynamic query construction for complex CRM data filtering and reporting",
              "language": "typescript",
              "code": "// Dynamic query builder for CRM analytics\nclass QueryBuilder {\n  private query: any;\n  \n  constructor(table: any) {\n    this.query = table;\n  }\n  \n  where(field: string, operator: string, value: any) {\n    this.query = this.query.where(\n      sql`${sql.identifier(field)} ${sql.raw(operator)} ${value}`\n    );\n    return this;\n  }\n  \n  orderBy(field: string, direction: 'asc' | 'desc' = 'asc') {\n    this.query = this.query.orderBy(sql`${sql.identifier(field)} ${sql.raw(direction)}`);\n    return this;\n  }\n  \n  paginate(page: number, limit: number) {\n    const offset = (page - 1) * limit;\n    this.query = this.query.limit(limit).offset(offset);\n    return this;\n  }\n  \n  async execute() {\n    return await this.query;\n  }\n}\n\n// Usage for CRM reports\nconst reportData = await new QueryBuilder(customers)\n  .where('created_at', '>=', startDate)\n  .where('status', '=', 'active')\n  .orderBy('revenue', 'desc')\n  .paginate(1, 50)\n  .execute();",
              "explanation": "Essential query functionality enabling complex data filtering and reporting in the CRM system."
            }
          ]
        },
        "clipwhisperer": {
          "title": "ClipWhisperer Platform",
          "description": "Microservices architecture with event-driven patterns, real-time processing, and AI integration",
          "technologies": [
            "Node.js",
            "Docker",
            "Kubernetes",
            "Redis",
            "PostgreSQL",
            "OpenAI API"
          ],
          "examples": [
            {
              "title": "Event-Driven Microservices with CQRS Pattern",
              "description": "Complex event sourcing and command query responsibility segregation implementation",
              "language": "typescript",
              "code": "// Event-driven architecture core\nclass EventBus {\n  private handlers = new Map<string, Function[]>();\n  \n  publish(eventType: string, data: any) {\n    const handlers = this.handlers.get(eventType) || [];\n    handlers.forEach(handler => {\n      try {\n        handler(data);\n      } catch (error) {\n        console.error(`Handler failed for ${eventType}:`, error);\n      }\n    });\n  }\n  \n  subscribe(eventType: string, handler: Function) {\n    if (!this.handlers.has(eventType)) {\n      this.handlers.set(eventType, []);\n    }\n    this.handlers.get(eventType)!.push(handler);\n  }\n}\n\n// Video processing event flow\nconst eventBus = new EventBus();\n\neventBus.subscribe('video.uploaded', (video) => {\n  eventBus.publish('video.processing.started', { videoId: video.id });\n});\n\neventBus.subscribe('video.processing.completed', (result) => {\n  eventBus.publish('ai.narration.requested', result);\n});\n\n// CQRS Command Handler\nclass ProcessVideoHandler {\n  async handle(command: ProcessVideoCommand) {\n    const aggregate = await this.loadAggregate(command.videoId);\n    const events = await this.executeCommand(aggregate, command);\n    \n    if (events.length > 0) {\n      await this.eventStore.appendEvents(command.videoId, events);\n      await this.repository.save(aggregate);\n    }\n  }\n  \n  private async loadAggregate(videoId: string) {\n    const events = await this.eventStore.getEvents(videoId);\n    return VideoAggregate.fromEvents(events);\n  }\n}",
              "explanation": "This demonstrates advanced microservices patterns including event sourcing, CQRS, optimistic concurrency control, event bus architecture, middleware patterns, and complex domain modeling with proper separation of concerns."
            }
          ]
        },
        "microservicesmanager": {
          "title": "Microservices Manager CLI",
          "description": "CLI tool for microservices ecosystem management with automated workflows and monitoring",
          "technologies": [
            "TypeScript",
            "Node.js",
            "Commander.js",
            "Docker",
            "Kubernetes"
          ],
          "examples": [
            {
              "title": "Service Discovery and Health Monitoring",
              "description": "Core functionality for discovering and monitoring microservices health",
              "language": "typescript",
              "code": "// Service discovery and health monitoring\nclass ServiceManager {\n  private services = new Map<string, ServiceInfo>();\n  \n  async discoverServices(namespace: string) {\n    const pods = await k8s.api.v1.namespace(namespace).pods.get();\n    \n    for (const pod of pods.body.items) {\n      const service = {\n        name: pod.metadata.name,\n        status: pod.status.phase,\n        endpoints: this.extractEndpoints(pod),\n        health: await this.checkHealth(pod)\n      };\n      \n      this.services.set(service.name, service);\n    }\n  }\n  \n  private async checkHealth(pod: any): Promise<'healthy' | 'unhealthy'> {\n    try {\n      const response = await fetch(`http://${pod.status.podIP}:8080/health`);\n      return response.ok ? 'healthy' : 'unhealthy';\n    } catch {\n      return 'unhealthy';\n    }\n  }\n  \n  getServiceStatus(name: string) {\n    return this.services.get(name);\n  }\n}\n\n// CLI command implementation\nprogram\n  .command('status')\n  .description('Check microservices status')\n  .action(async () => {\n    const manager = new ServiceManager();\n    await manager.discoverServices('default');\n    \n    console.table(Array.from(manager.services.values()));\n  });",
              "explanation": "Core service discovery functionality enabling monitoring and management of microservices."
            },
            {
              "title": "Automated Deployment Pipeline",
              "description": "Essential deployment automation for microservices updates",
              "language": "typescript",
              "code": "// Automated deployment pipeline\nclass DeploymentPipeline {\n  async deploy(serviceName: string, imageTag: string) {\n    console.log(`Deploying ${serviceName}:${imageTag}...`);\n    \n    // 1. Build and push image\n    await this.buildImage(serviceName, imageTag);\n    \n    // 2. Update deployment\n    await this.updateDeployment(serviceName, imageTag);\n    \n    // 3. Wait for rollout\n    await this.waitForRollout(serviceName);\n    \n    // 4. Verify health\n    await this.verifyDeployment(serviceName);\n    \n    console.log('Deployment completed successfully!');\n  }\n  \n  private async buildImage(serviceName: string, tag: string) {\n    const { exec } = require('child_process');\n    return new Promise((resolve, reject) => {\n      exec(`docker build -t ${serviceName}:${tag} .`, (error, stdout) => {\n        if (error) reject(error);\n        else resolve(stdout);\n      });\n    });\n  }\n  \n  private async updateDeployment(serviceName: string, imageTag: string) {\n    const deployment = await k8s.api.apps.v1.namespace('default')\n      .deployments(serviceName).get();\n    \n    deployment.body.spec.template.spec.containers[0].image = `${serviceName}:${imageTag}`;\n    \n    await k8s.api.apps.v1.namespace('default')\n      .deployments(serviceName).put({ body: deployment.body });\n  }\n}\n\n// CLI usage\nprogram\n  .command('deploy <service> <tag>')\n  .description('Deploy microservice with specified tag')\n  .action(async (service, tag) => {\n    const pipeline = new DeploymentPipeline();\n    await pipeline.deploy(service, tag);\n  });",
              "explanation": "Core deployment functionality enabling automated microservices updates and rollouts."
            }
          ]
        }
      }
    },
    "technicalChallenges": {
      "title": "Technical Challenges & Solutions",
      "description": "Complex technical problems solved and innovative solutions implemented",
      "challenges": [
        {
          "title": "Real-time PDF Generation with Dynamic Theming",
          "problem": "Creating a flexible PDF generation system that supports multiple themes, layouts, and visual elements while maintaining performance and ATS compatibility",
          "solution": "Developed a modular PDF generator with theme system, layout variants, and conditional visual elements using jsPDF and custom configuration management",
          "technologies": ["jsPDF", "TypeScript", "React", "Material-UI"],
          "impact": "Reduced PDF generation time by 60% and enabled dynamic customization without code changes"
        },
        {
          "title": "Responsive Design with Material-UI Breakpoints",
          "problem": "Creating a responsive design system that works seamlessly across all device sizes using Material-UI's complex breakpoint system",
          "solution": "Developed custom hooks for device detection, combined media queries with window dimensions, and implemented fallback logic",
          "technologies": ["React", "Material-UI", "TypeScript", "CSS-in-JS"],
          "impact": "Improved user experience across all devices and reduced layout issues by 85%"
        }
      ]
    },
    "sections": {
      "overview": {
        "title": "Technical Overview",
        "description": "A comprehensive analysis of technical skills, architecture patterns, and implementation strategies across various projects and technologies."
      },
      "architecture": {
        "title": "Architecture & Design Patterns",
        "patterns": {
          "microservices": {
            "title": "Microservices Architecture",
            "description": "Design and implementation of scalable microservices using Node.js, Express, and containerization",
            "technologies": [
              "Node.js",
              "Express.js",
              "Docker",
              "Kubernetes",
              "API Gateway",
              "Service Mesh"
            ],
            "examples": [
              "ClipWhisperer platform with 5+ microservices",
              "Event-driven architecture with message queues",
              "Distributed logging and monitoring"
            ]
          },
          "monolithic": {
            "title": "Monolithic to Microservices Migration",
            "description": "Strategic migration of legacy monolithic systems to modern microservices architecture",
            "technologies": [
              "Legacy Systems",
              "Database Migration",
              "API Versioning",
              "Gradual Migration"
            ],
            "examples": [
              "Insurance core systems modernization",
              "Database schema evolution strategies",
              "Zero-downtime deployment patterns"
            ]
          },
          "frontend": {
            "title": "Modern Frontend Architecture",
            "description": "Component-based architecture with state management and performance optimization",
            "technologies": [
              "React",
              "Next.js",
              "TypeScript",
              "State Management",
              "SSR/SSG"
            ],
            "examples": [
              "Server-side rendering with Next.js",
              "Component library development",
              "Performance optimization techniques"
            ]
          }
        }
      },
      "technologies": {
        "title": "Technology Stack Deep Dive",
        "frontend": {
          "title": "Frontend Technologies",
          "frameworks": {
            "react": {
              "title": "React Ecosystem",
              "description": "Advanced React patterns, hooks, and performance optimization",
              "skills": [
                "Custom Hooks",
                "Context API",
                "Performance Optimization",
                "Testing",
                "Accessibility"
              ],
              "projects": [
                "Portfolio Website",
                "Enterprise CRM",
                "Component Libraries"
              ]
            },
            "nextjs": {
              "title": "Next.js Framework",
              "description": "Full-stack React framework with SSR, SSG, and API routes",
              "skills": [
                "SSR/SSG",
                "API Routes",
                "Middleware",
                "Image Optimization",
                "Performance"
              ],
              "projects": [
                "Portfolio Website",
                "Blog Platform",
                "E-commerce Solutions"
              ]
            }
          },
          "styling": {
            "title": "Styling & UI",
            "technologies": [
              "Material-UI",
              "Tailwind CSS",
              "Styled Components",
              "CSS-in-JS",
              "Responsive Design"
            ],
            "skills": [
              "Design Systems",
              "Component Styling",
              "Theme Management",
              "Animation"
            ]
          }
        },
        "backend": {
          "title": "Backend Technologies",
          "frameworks": {
            "nodejs": {
              "title": "Node.js & Express",
              "description": "Server-side Typescript with Express.js framework",
              "skills": [
                "REST APIs",
                "Middleware",
                "Authentication",
                "Error Handling",
                "Performance"
              ],
              "projects": [
                "Microservices",
                "API Development",
                "Real-time Applications"
              ]
            },
            "trpc": {
              "title": "tRPC Framework",
              "description": "End-to-end typesafe APIs with TypeScript",
              "skills": [
                "Type Safety",
                "API Design",
                "Validation",
                "Real-time",
                "Caching"
              ],
              "projects": [
                "Portfolio Backend",
                "Real-time Features",
                "Type-safe APIs"
              ]
            }
          },
          "databases": {
            "title": "Database Technologies",
            "postgresql": {
              "title": "PostgreSQL",
              "description": "Relational database with advanced features and optimization",
              "skills": [
                "Schema Design",
                "Query Optimization",
                "Indexing",
                "Transactions",
                "Migrations"
              ],
              "projects": [
                "Insurance Systems",
                "User Management",
                "Financial Data"
              ]
            },
            "mongodb": {
              "title": "MongoDB",
              "description": "NoSQL database for flexible data modeling",
              "skills": [
                "Document Design",
                "Aggregation",
                "Sharding",
                "Performance Tuning"
              ],
              "projects": [
                "Content Management",
                "User Profiles",
                "Analytics Data"
              ]
            }
          }
        },
        "devops": {
          "title": "DevOps & Cloud",
          "cloud": {
            "title": "Cloud Platforms",
            "aws": {
              "title": "Amazon Web Services",
              "description": "Cloud infrastructure and services",
              "skills": ["EC2", "S3", "Lambda", "RDS", "CloudFront", "IAM"],
              "projects": [
                "Application Hosting",
                "File Storage",
                "Serverless Functions"
              ]
            },
            "vercel": {
              "title": "Vercel Platform",
              "description": "Frontend deployment and optimization",
              "skills": [
                "Deployment",
                "Edge Functions",
                "Analytics",
                "Performance"
              ],
              "projects": ["Portfolio Deployment", "Static Site Generation"]
            }
          },
          "containerization": {
            "title": "Containerization & Orchestration",
            "technologies": [
              "Docker",
              "Kubernetes",
              "Docker Compose",
              "Container Registry"
            ],
            "skills": [
              "Containerization",
              "Orchestration",
              "Scaling",
              "Service Discovery"
            ]
          }
        }
      },
      "projects": {
        "title": "Technical Project Analysis",
        "snowHQ": {
          "title": "Snow HQ - Enterprise CRM",
          "description": "Full-stack enterprise customer relationship management system",
          "architecture": {
            "frontend": "React with TypeScript, Material-UI, and custom component library",
            "backend": "Node.js with Express, tRPC for type-safe APIs",
            "database": "PostgreSQL with Drizzle ORM for type-safe database operations",
            "deployment": "Vercel for frontend, Railway for backend services"
          },
          "technicalChallenges": [
            "Complex state management across multiple modules",
            "Real-time data synchronization",
            "Performance optimization for large datasets",
            "Type safety across the entire stack"
          ],
          "solutions": [
            "Implemented custom hooks for state management",
            "Used WebSockets for real-time updates",
            "Implemented virtual scrolling and pagination",
            "Created end-to-end TypeScript types with tRPC"
          ],
          "technologies": [
            "React",
            "TypeScript",
            "Node.js",
            "tRPC",
            "PostgreSQL",
            "Drizzle ORM",
            "Material-UI"
          ]
        },
        "clipWhisperer": {
          "title": "ClipWhisperer - Microservices Platform",
          "description": "AI-powered video processing platform with microservices architecture",
          "architecture": {
            "frontend": "Next.js with TypeScript and Tailwind CSS",
            "backend": "Multiple microservices with Node.js and Express",
            "database": "PostgreSQL for metadata, Redis for caching",
            "deployment": "Docker containers with Kubernetes orchestration"
          },
          "technicalChallenges": [
            "Video processing pipeline optimization",
            "Microservices communication and data consistency",
            "AI integration for automated narration",
            "Scalable file storage and processing"
          ],
          "solutions": [
            "Implemented event-driven architecture with message queues",
            "Used CQRS pattern for data consistency",
            "Integrated OpenAI API for AI narration",
            "Implemented distributed file storage with CDN"
          ],
          "technologies": [
            "Next.js",
            "Node.js",
            "Docker",
            "Kubernetes",
            "Redis",
            "OpenAI API",
            "FFmpeg"
          ]
        },
        "portfolio": {
          "title": "Portfolio Website - Modern Web Application",
          "description": "Personal portfolio website with blog, resume generation, and admin panel",
          "architecture": {
            "frontend": "Next.js with App Router, TypeScript, and Material-UI",
            "backend": "tRPC with Prisma ORM and SQLite/PostgreSQL",
            "features": "SSR, ISR, dynamic routing, and API routes",
            "deployment": "Vercel with edge functions and CDN"
          },
          "technicalChallenges": [
            "Internationalization (i18n) with RTL support",
            "Dynamic PDF generation with custom themes",
            "Real-time blog management system",
            "Performance optimization for global audience"
          ],
          "solutions": [
            "Implemented next-intl for i18n with RTL support",
            "Created custom PDF generator with jsPDF",
            "Built admin panel with tRPC and real-time updates",
            "Optimized with ISR, image optimization, and edge caching"
          ],
          "technologies": [
            "Next.js",
            "TypeScript",
            "tRPC",
            "Prisma",
            "Material-UI",
            "jsPDF",
            "next-intl"
          ]
        }
      }
    }
  },
  "calendly": {
    "title": "Schedule a Meeting",
    "description": "Let's discuss your project, explore collaboration opportunities, or have a technical conversation. I'm here to help bring your ideas to life.",
    "booking": {
      "title": "Meeting Details",
      "description": "Choose a time that works best for you. All meetings are conducted via video call with screen sharing capabilities.",
      "details": {
        "duration": "30 Minutes",
        "durationDesc": "Perfect for initial discussions",
        "format": "Video Call",
        "formatDesc": "Google Meet or Zoom",
        "language": "English/Hebrew",
        "languageDesc": "Bilingual support available",
        "audience": "1-on-1",
        "audienceDesc": "Personalized consultation"
      }
    },
    "widget": {
      "title": "Book Your Meeting",
      "description": "Select your preferred date and time from the available slots below.",
      "buttonText": "Schedule Meeting"
    },
    "expectations": {
      "title": "What to Expect",
      "description": "Here's what you can expect from our meeting to ensure we make the most of our time together.",
      "items": [
        {
          "title": "Project Discussion",
          "description": "We'll dive deep into your project requirements, technical challenges, and desired outcomes. Bring any questions or specific problems you'd like to solve."
        },
        {
          "title": "Technical Consultation",
          "description": "I'll provide expert advice on architecture decisions, technology stack recommendations, and best practices based on your specific use case."
        },
        {
          "title": "Collaboration Opportunities",
          "description": "Explore potential partnership opportunities, freelance projects, or long-term collaboration possibilities that align with your goals."
        },
        {
          "title": "Next Steps",
          "description": "We'll outline clear next steps, timelines, and deliverables to move forward with your project or collaboration."
        }
      ]
    }
  }
}
