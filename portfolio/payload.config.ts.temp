import { buildConfig } from "payload";
import { sqliteAdapter } from "@payloadcms/db-sqlite";
import { lexicalEditor } from "@payloadcms/richtext-lexical";
import path from "path";

// Collections
import { Users } from "./src/collections/Users";
import { Categories } from "./src/collections/Categories";
import { Media } from "./src/collections/Media";
import { Pages } from "./src/collections/Pages";
import { Projects } from "./src/collections/Projects";
import { Posts } from "./src/collections/Posts";
import { Testimonials } from "./src/collections/Testimonials";
import { Skills } from "./src/collections/Skills";
import { WorkExperience } from "./src/collections/WorkExperience";
import { Certifications } from "./src/collections/Certifications";

// Globals
import { Home } from "./src/globals/Home";
import { Navigation } from "./src/globals/Navigation";

export default buildConfig({
  secret: process.env.PAYLOAD_SECRET || "your-secret-key-here",
  serverURL: process.env.NEXT_PUBLIC_SITE_URL || "http://localhost:3000",
  admin: {
    user: Users.slug,
  },
  collections: [
    Categories,
    Media,
    Pages,
    Projects,
    Posts,
    Testimonials,
    Skills,
    WorkExperience,
    Certifications,
    Users,
  ],
  globals: [Home, Navigation],
  typescript: {
    outputFile: path.resolve(__dirname, "payload-types.ts"),
  },
  graphQL: {
    schemaOutputFile: path.resolve(__dirname, "generated-schema.graphql"),
  },
  db: sqliteAdapter({
    client: { url: process.env.DATABASE_URI! },
  }),
  upload: {
    limits: {
      fileSize: 5000000, // 5MB
    },
  },
  editor: lexicalEditor({}),
});
